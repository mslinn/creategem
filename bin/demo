#!/usr/bin/env ruby

require 'fileutils'
require 'open3'
require 'thor'

module CreategemDemo
  def self.run(command, input)
    Open3.popen3(command) do |stdin, stdout, stderr, thread|
      Thread.new do
        input.split("\n").each { |line| stdin.puts line }
      end

      stdout.each_line { |line| puts line }

      Thread.new do
        until (line = stderr.gets).nil?
          yield nil, line, thread
        end
      end

      thread.join
    end
  end

  class Demo
    def initialize
      # FileUtils.rm_rf 'demo'

      @shell = Thor::Shell::Basic.new

      @gem_type = @shell.ask 'Type of gem to test.', default: 'jekyll',
        limited_to: %w[jekyll plain rails]

      @gem_name = @shell.ask 'Name of the gem.', default: 'test'

      @jekyll_type = @shell.ask 'Type of Jekyll plugin.', limited_to: %w[block tag filter]

      @jekyll_parameters = @shell.ask 'Jekyll parameter names.'

      case @gem_type
      when 'plain'
        abort 'TODO: write plain gem demo'

      when 'jekyll'
        puts 'TODO: Emit code for jekyll'

      when 'rails'
        abort 'TODO: Write rails demo'
      end
    end

    def test_block
      block_input = <<~END_INPUT
        opt1 opt2
        string
        boolean
        param1 param2
        string
        numeric
        no
      END_INPUT
      run 'exe/creategem jekyll jekyll_test --block my_block1 --block my_block2', block_input
    end

    def test_tag
      tag_input = <<~END_INPUT
        opt1 opt2
        string
        boolean
        param1 param2
        string
        numeric
        no
      END_INPUT
      run 'exe/creategem jekyll jekyll_test --tag my_tag1 --tag my_tag2', tag_input
    end
  end

  Demo.new
end
